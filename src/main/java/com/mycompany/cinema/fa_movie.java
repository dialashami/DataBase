/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cinema;
import static com.mycompany.cinema.user_f_movie1.t1;
import static com.mycompany.cinema.user_f_movie1.t1;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.sql.Date;
import java.sql.ResultSet;
 import java.sql.Time;
import java.text.ParseException;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author asus
 */
public class fa_movie extends JFrame {

    /**
     * Creates new form fa_movie
     */
     String filePath;
   String normalizedPath1;
   String normalizedPath2;
   ResultSet rs;
  Connection con1;
 
   Statement ST;
    Calendar  clndr;
    Date date1;
    public fa_movie() {
        initComponents();
        try 
        {
            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection con =DriverManager.getConnection(conninfo,"dialaa","12345");
            con .setAutoCommit(false);
            
            String qury="SELECT *FROM cinema.movie ";
           System.out.println(qury);
            ST=con.createStatement();
            rs= ST.executeQuery(qury);
            DefaultTableModel tblModl = (DefaultTableModel) jTable1.getModel();
            tblModl.setRowCount(0);
            while (rs.next()) 
            {
                 tblModl.addRow(new String []{rs.getString(2),rs.getString(1),rs.getString(5),rs.getString(3),rs.getString(4),rs.getString(7),rs.getString(8),rs.getString(9)});
            }
           
            
            String qury2="SELECT *FROM cinema.movie ";
            System.out.println(qury2);
            Statement  ST1=con.createStatement();
            ResultSet rs1= ST1.executeQuery(qury2);
            DefaultTableModel tblMod2 = (DefaultTableModel) jTable2.getModel();
            tblMod2.setRowCount(0);
            while (rs1.next()) 
            {
                 tblMod2.addRow(new String []{rs1.getString(2),rs1.getString(1),rs1.getString(5),rs1.getString(3),rs1.getString(4),rs1.getString(7),rs1.getString(8),rs1.getString(9)});
            } 
            
            String qury3="SELECT *FROM cinema.movie ";
            System.out.println(qury3);
            Statement  ST3=con.createStatement();
            ResultSet rs3= ST3.executeQuery(qury3);
            DefaultTableModel tblMod3 = (DefaultTableModel) jTable3.getModel();
            tblMod3.setRowCount(0);
            while (rs3.next()) 
            {
                 tblMod3.addRow(new String []{rs3.getString(2),rs3.getString(1),rs3.getString(5),rs3.getString(3),rs3.getString(4),rs3.getString(7),rs3.getString(8),rs3.getString(9)});
            } 
            
            
            
            
            
            con.commit();
            con.close();
           // JOptionPane.showMessageDialog(null , "connected");
            
       }
        
      catch(Exception ex )
      {
            System.out.println(ex.getMessage());
          JOptionPane.showMessageDialog(null , " not connected");
              
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        refresh_ALL = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField1_INSEART = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2_INSEART = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4_INSEART = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5_INSEART = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField6_INSEART = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField7_INSEART = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton5_INSEART = new javax.swing.JButton();
        jButton6_INSEART = new javax.swing.JButton();
        CLEAR_INSEART = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        refresh_DELETE = new javax.swing.JButton();
        DELETE_DELET = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField1_MovieName_MM_UPDATE = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField2_MovieID_MM_UPDATE = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField8_UPDATE = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField9_UPDATE = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField10_UPDATE = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField11_UPDATE = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton8_UPDATE = new javax.swing.JButton();
        UPDATE_UPDATE = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        refresh_UPDATE = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jCalendar3 = new com.toedter.calendar.JCalendar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(java.awt.SystemColor.activeCaption);
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(600, 500));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(600, 500));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanel2.setLayout(null);

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "movie name", "movie id", "date", "description", "type", "start_time", "end_time", "icon_path"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTable1ComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 200, 570, 190);

        refresh_ALL.setIcon(new ImageIcon("C:\\Users\\hp\\Downloads\\cinema\\cinema4\\src\\pic\\Refresh-Icon (1).png")
        );
        refresh_ALL.setPreferredSize(new java.awt.Dimension(20, 20));
        refresh_ALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_ALLActionPerformed(evt);
            }
        });
        jPanel2.add(refresh_ALL);
        refresh_ALL.setBounds(540, 150, 40, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\asus\\Desktop\\CE_Diala\\3rd year\\DataBase\\cinema\\src\\pic\\show_all.png")); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, -40, 600, 510);

        jTabbedPane1.addTab("ALL MOVIES", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanel3.setLayout(null);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("MOVIE NAME:");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(20, 140, 130, 24);

        jTextField1_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel3.add(jTextField1_INSEART);
        jTextField1_INSEART.setBounds(160, 140, 170, 22);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MOVIE_ID:");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(50, 170, 100, 24);

        jTextField2_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel3.add(jTextField2_INSEART);
        jTextField2_INSEART.setBounds(160, 170, 170, 22);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DATE:");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(90, 210, 60, 24);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("MOVIE TYPE:");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(30, 320, 130, 24);

        jTextField4_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField4_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel3.add(jTextField4_INSEART);
        jTextField4_INSEART.setBounds(160, 320, 170, 22);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" START TIME:");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(30, 350, 130, 24);

        jTextField5_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField5_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel3.add(jTextField5_INSEART);
        jTextField5_INSEART.setBounds(160, 350, 170, 22);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("END TIME:");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(50, 380, 100, 24);

        jTextField6_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField6_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jTextField6_INSEART.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6_INSEARTActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField6_INSEART);
        jTextField6_INSEART.setBounds(160, 380, 170, 22);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Description:");
        jLabel6.setToolTipText("");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(50, 400, 100, 24);

        jTextField7_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jTextField7_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7_INSEART.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel3.add(jTextField7_INSEART);
        jTextField7_INSEART.setBounds(160, 410, 170, 40);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("MOVIE POSTER:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(370, 180, 160, 24);

        jButton5_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jButton5_INSEART.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton5_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        jButton5_INSEART.setText("Inseart");
        jButton5_INSEART.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_INSEARTActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5_INSEART);
        jButton5_INSEART.setBounds(380, 390, 110, 26);

        jButton6_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        jButton6_INSEART.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6_INSEARTActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6_INSEART);
        jButton6_INSEART.setBounds(360, 210, 160, 170);

        CLEAR_INSEART.setBackground(new java.awt.Color(51, 51, 51));
        CLEAR_INSEART.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        CLEAR_INSEART.setForeground(new java.awt.Color(255, 255, 255));
        CLEAR_INSEART.setText("Clear data");
        CLEAR_INSEART.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEAR_INSEARTActionPerformed(evt);
            }
        });
        jPanel3.add(CLEAR_INSEART);
        CLEAR_INSEART.setBounds(380, 420, 110, 20);
        jPanel3.add(jCalendar1);
        jCalendar1.setBounds(160, 190, 180, 130);

        jTabbedPane1.addTab("INSEART", jPanel3);

        jPanel4.setBackground(java.awt.SystemColor.control);
        jPanel4.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanel4.setLayout(null);

        jScrollPane3.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseClicked(evt);
            }
        });

        jTable3.setBackground(java.awt.Color.darkGray);
        jTable3.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jTable3.setForeground(new java.awt.Color(255, 255, 255));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "movie name", "movie id", "date", "description", "type", "start_time", "end_time", "icon_path"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel4.add(jScrollPane3);
        jScrollPane3.setBounds(10, 200, 570, 150);

        refresh_DELETE.setIcon(new ImageIcon("C:\\Users\\hp\\Downloads\\cinema\\cinema4\\src\\pic\\Refresh-Icon (1).png")
        );
        refresh_DELETE.setPreferredSize(new java.awt.Dimension(20, 20));
        refresh_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_DELETEActionPerformed(evt);
            }
        });
        jPanel4.add(refresh_DELETE);
        refresh_DELETE.setBounds(540, 160, 40, 30);

        DELETE_DELET.setBackground(new java.awt.Color(51, 51, 51));
        DELETE_DELET.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        DELETE_DELET.setForeground(new java.awt.Color(255, 255, 255));
        DELETE_DELET.setText("DELETE");
        DELETE_DELET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETE_DELETActionPerformed(evt);
            }
        });
        jPanel4.add(DELETE_DELET);
        DELETE_DELET.setBounds(20, 360, 110, 31);

        jLabel20.setIcon(new ImageIcon("C:\\Users\\hp\\Downloads\\cinema\\cinema4\\src\\pic\\show_all.png"));
        jLabel20.setText("jLabel1");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(0, 0, 600, 470);

        jTabbedPane1.addTab("DELETE", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setFocusable(false);
        jPanel5.setMaximumSize(new java.awt.Dimension(600, 500));
        jPanel5.setMinimumSize(new java.awt.Dimension(600, 500));
        jPanel5.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("MOVIE NAME:");
        jPanel5.add(jLabel12);
        jLabel12.setBounds(20, 150, 130, 24);

        jTextField1_MovieName_MM_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1_MovieName_MM_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1_MovieName_MM_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel5.add(jTextField1_MovieName_MM_UPDATE);
        jTextField1_MovieName_MM_UPDATE.setBounds(150, 150, 170, 22);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("MOVIE_ID:");
        jPanel5.add(jLabel13);
        jLabel13.setBounds(50, 170, 100, 24);

        jTextField2_MovieID_MM_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2_MovieID_MM_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2_MovieID_MM_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel5.add(jTextField2_MovieID_MM_UPDATE);
        jTextField2_MovieID_MM_UPDATE.setBounds(150, 180, 170, 22);

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("DATE:");
        jPanel5.add(jLabel14);
        jLabel14.setBounds(80, 200, 60, 24);

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("MOVIE TYPE:");
        jPanel5.add(jLabel15);
        jLabel15.setBounds(10, 330, 130, 24);

        jTextField8_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField8_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel5.add(jTextField8_UPDATE);
        jTextField8_UPDATE.setBounds(150, 330, 170, 22);

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText(" START TIME:");
        jPanel5.add(jLabel16);
        jLabel16.setBounds(10, 360, 130, 24);

        jTextField9_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField9_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel5.add(jTextField9_UPDATE);
        jTextField9_UPDATE.setBounds(150, 360, 170, 22);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("END TIME:");
        jPanel5.add(jLabel17);
        jLabel17.setBounds(40, 390, 100, 24);

        jTextField10_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField10_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jPanel5.add(jTextField10_UPDATE);
        jTextField10_UPDATE.setBounds(150, 390, 170, 22);

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Description:");
        jLabel18.setToolTipText("");
        jPanel5.add(jLabel18);
        jLabel18.setBounds(40, 420, 100, 24);

        jTextField11_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jTextField11_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        jTextField11_UPDATE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 0, 51)));
        jTextField11_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11_UPDATEActionPerformed(evt);
            }
        });
        jPanel5.add(jTextField11_UPDATE);
        jTextField11_UPDATE.setBounds(150, 420, 170, 40);

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("MOVIE POSTER:");
        jPanel5.add(jLabel19);
        jLabel19.setBounds(390, 190, 160, 24);

        jButton8_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        jButton8_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8_UPDATEActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8_UPDATE);
        jButton8_UPDATE.setBounds(390, 220, 140, 180);

        UPDATE_UPDATE.setBackground(new java.awt.Color(51, 51, 51));
        UPDATE_UPDATE.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        UPDATE_UPDATE.setForeground(new java.awt.Color(255, 255, 255));
        UPDATE_UPDATE.setText("UPDATE");
        UPDATE_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATE_UPDATEActionPerformed(evt);
            }
        });
        jPanel5.add(UPDATE_UPDATE);
        UPDATE_UPDATE.setBounds(410, 410, 100, 26);

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setAutoscrolls(true);

        jTable2.setBackground(java.awt.Color.darkGray);
        jTable2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "movie name", "movie id", "date", "description", "type", "start_time", "end_time", "icon_path"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel5.add(jScrollPane2);
        jScrollPane2.setBounds(10, 0, 570, 150);

        refresh_UPDATE.setIcon(new ImageIcon("C:\\Users\\hp\\Downloads\\cinema\\cinema4\\src\\pic\\Refresh-Icon (1).png")
        );
        refresh_UPDATE.setPreferredSize(new java.awt.Dimension(20, 20));
        refresh_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_UPDATEActionPerformed(evt);
            }
        });
        jPanel5.add(refresh_UPDATE);
        refresh_UPDATE.setBounds(530, 160, 40, 40);

        jLabel21.setIcon(new ImageIcon("C:\\Users\\hp\\Downloads\\cinema\\cinema4\\src\\pic\\show_all.png"));
        jLabel21.setText("jLabel1");
        jPanel5.add(jLabel21);
        jLabel21.setBounds(0, 0, 600, 470);
        jPanel5.add(jCalendar3);
        jCalendar3.setBounds(150, 201, 190, 130);

        jTabbedPane1.addTab("UPDATE", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentShown

    }//GEN-LAST:event_jTable1ComponentShown

    private void refresh_ALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_ALLActionPerformed
        try{

            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection conR =DriverManager.getConnection(conninfo,"dialaa","12345");
            conR .setAutoCommit(false);

            String qury2="SELECT *FROM cinema.movie ";
            System.out.println(qury2);
            Statement  STR=conR.createStatement();
            ResultSet  rsR= STR.executeQuery(qury2);
            DefaultTableModel tblMod1 = (DefaultTableModel) jTable1.getModel();
            tblMod1.setRowCount(0);
            while (rsR.next())
            {
                 tblMod1.addRow(new String []{rsR.getString(2),rsR.getString(1),rsR.getString(5),rsR.getString(3),rsR.getString(4),rsR.getString(7),rsR.getString(8),rsR.getString(9)});
            }

            conR.commit();
            conR.close();
        }
        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }
    }//GEN-LAST:event_refresh_ALLActionPerformed

    private void jTextField6_INSEARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6_INSEARTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6_INSEARTActionPerformed

    private void jButton5_INSEARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_INSEARTActionPerformed

        String name=jTextField1_INSEART.getText();
        String id=jTextField2_INSEART.getText();

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(jCalendar3.getCalendar().getTime());

        String type=jTextField4_INSEART.getText();
        /*
        DateTimeFormatter timeFormat = DateTimeFormatter.ofPattern("HH:mm:ss");

        String start_t = jTextField5.getText();
        LocalTime startTime = LocalTime.parse(start_t);
        String formattedStartTime = startTime.format(timeFormat);

        String end_t = jTextField6.getText();
        LocalTime endTime = LocalTime.parse(end_t);
        String formattedEndTime = endTime.format(timeFormat);
        */

        String desc=jTextField7_INSEART.getText();

        try
        {
            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection con =DriverManager.getConnection(conninfo,"dialaa","12345");
            con .setAutoCommit(false);

            String qury2="INSERT INTO cinema.movie(mname, mid, mdate, mdescription, mtype,icon_path)VALUES (?, ?, ?, ?, ?,?)";
            PreparedStatement ps=con .prepareStatement(qury2);

            ps.setString(1, name);
            ps.setString(2, id);
            //ps.setString(3, date);
            ps.setDate(3, java.sql.Date.valueOf(date));
            ps.setString(4, desc);
            ps.setString(5, type);

            // ps.setString(6,  start_t);
            //ps.setString(7, end_t);
            // ps.setString(6, formattedStartTime);
            // ps.setString(7, formattedEndTime);
            ps.setString(6, normalizedPath1);

            ps .executeUpdate();
            con.commit();
            con.close();
            JOptionPane.showMessageDialog(null , "connected");

        }

        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }

    }//GEN-LAST:event_jButton5_INSEARTActionPerformed

    private void jButton6_INSEARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6_INSEARTActionPerformed
        JFileChooser choice = new JFileChooser(System.getProperty("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG Images (*.png)", "png");
        choice.setFileFilter(filter);
        choice.setDialogTitle("Select a file to send");
        int option = choice.showOpenDialog(null);

        if (option == JFileChooser.APPROVE_OPTION) {
            File file = choice.getSelectedFile();
            byte[] fileData;
            try {
                fileData = Files.readAllBytes(file.toPath());
                filePath = file.getAbsolutePath();
                normalizedPath1 =  filePath.replace("\\", "\\\\");
                    System.out.println(normalizedPath1);
                }

                catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "File Not Found!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            }

    }//GEN-LAST:event_jButton6_INSEARTActionPerformed

    private void CLEAR_INSEARTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEAR_INSEARTActionPerformed

        jTextField1_INSEART.setText("");
        jTextField2_INSEART.setText("");
        jTextField4_INSEART.setText("");
        jTextField5_INSEART.setText("");
        jTextField6_INSEART.setText("");
        jTextField7_INSEART.setText("");

    }//GEN-LAST:event_CLEAR_INSEARTActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked

    }//GEN-LAST:event_jTable3MouseClicked

    private void jScrollPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseClicked

    }//GEN-LAST:event_jScrollPane3MouseClicked

    private void refresh_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_DELETEActionPerformed

        try{

            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection conR =DriverManager.getConnection(conninfo,"dialaa","12345");
            conR .setAutoCommit(false);

            String qury2="SELECT *FROM cinema.movie ";
            System.out.println(qury2);
            Statement  STR=conR.createStatement();
            ResultSet  rsR= STR.executeQuery(qury2);
            DefaultTableModel tblMod2 = (DefaultTableModel) jTable3.getModel();
            tblMod2.setRowCount(0);
            while (rsR.next())
            {
                 tblMod2.addRow(new String []{rsR.getString(2),rsR.getString(1),rsR.getString(5),rsR.getString(3),rsR.getString(4),rsR.getString(7),rsR.getString(8),rsR.getString(9)});
            }

            conR.commit();
            conR.close();
        }
        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }
    }//GEN-LAST:event_refresh_DELETEActionPerformed

    private void DELETE_DELETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETE_DELETActionPerformed

        try
        {
            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection con =DriverManager.getConnection(conninfo,"dialaa","12345");
            con .setAutoCommit(false);

            DefaultTableModel tblMod3 = (DefaultTableModel) jTable3.getModel();
            int index=jTable3.getSelectedRow();

            String  ID=tblMod3.getValueAt(index, 1).toString();

            String qury2="DELETE FROM cinema.movie  where( mid=?)";
            PreparedStatement ps=con .prepareStatement(qury2);
            ps.setString(1, ID);

            ps .executeUpdate();
            con.commit();
            con.close();
            JOptionPane.showMessageDialog(null , "connected");

        }

        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }

    }//GEN-LAST:event_DELETE_DELETActionPerformed

    private void jTextField11_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11_UPDATEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11_UPDATEActionPerformed

    private void jButton8_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8_UPDATEActionPerformed
        JFileChooser choice = new JFileChooser(System.getProperty("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG Images (*.png)", "png");
        choice.setFileFilter(filter);
        choice.setDialogTitle("Select a file to send");
        int option = choice.showOpenDialog(null);

        if (option == JFileChooser.APPROVE_OPTION) {
            File file = choice.getSelectedFile();
            byte[] fileData;
            try {
                fileData = Files.readAllBytes(file.toPath());
                filePath = file.getAbsolutePath();
                normalizedPath2 =  filePath.replace("\\", "\\\\");
                    System.out.println(normalizedPath2);
                }

                catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "File Not Found!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            }
    }//GEN-LAST:event_jButton8_UPDATEActionPerformed

    private void UPDATE_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATE_UPDATEActionPerformed

        String  name=jTextField1_MovieName_MM_UPDATE.getText();
        String  ID=jTextField2_MovieID_MM_UPDATE.getText();

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(jCalendar3.getCalendar().getTime());

        String  descri=jTextField11_UPDATE.getText();
        String  type=jTextField8_UPDATE.getText();
        String  start_t=jTextField9_UPDATE.getText();
        String  end_t=jTextField10_UPDATE.getText();
        String  path=normalizedPath2;

        try
        {
            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection con =DriverManager.getConnection(conninfo,"dialaa","12345");
            con .setAutoCommit(false);

            String qury2="UPDATE cinema.movie set mname=?, mid=?,mdate=? , mdescription=?, mtype=?,icon_path=? where( mid=?)";
            PreparedStatement ps=con .prepareStatement(qury2);

            ps.setString(1, name);
            ps.setString(2, ID);

            ps.setDate(3, java.sql.Date.valueOf(date));
            ps.setString(4, descri);
            ps.setString(5, type);

            // ps.setString(6,  start_t);
            //ps.setString(7, end_t);
            // ps.setString(6, formattedStartTime);
            // ps.setString(7, formattedEndTime);
            ps.setString(6, path);
            ps.setString(7, ID);
            ps .executeUpdate();
            con.commit();
            con.close();
            JOptionPane.showMessageDialog(null , "connected");

        }

        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }

    }//GEN-LAST:event_UPDATE_UPDATEActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        DefaultTableModel tblMod2 = (DefaultTableModel) jTable2.getModel();
        int index=jTable2.getSelectedRow();

        if (index != -1 && index < tblMod2.getRowCount())
        {

            String  name=tblMod2.getValueAt(index, 0).toString();
            String  ID=tblMod2.getValueAt(index, 1).toString();

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = tblMod2.getValueAt(index, 2).toString();
            date1 = java.sql.Date.valueOf(date);

            String  descri=tblMod2.getValueAt(index, 3).toString();
            String  type=tblMod2.getValueAt(index, 4).toString();
            String  start_t=tblMod2.getValueAt(index, 5).toString();
            String  end_t=tblMod2.getValueAt(index, 6).toString();
            String path =tblMod2.getValueAt(index, 7).toString();

            clndr.setTime(date1);
            jCalendar3.setCalendar(clndr);

            jTextField1_MovieName_MM_UPDATE.setText(name);
            jTextField2_MovieID_MM_UPDATE.setText(ID);
            jTextField11_UPDATE.setText(descri);
            jTextField8_UPDATE.setText(type);
            jTextField9_UPDATE.setText(start_t);
            jTextField10_UPDATE.setText(end_t);
            jButton8_UPDATE.setIcon(new ImageIcon(path));
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void refresh_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_UPDATEActionPerformed

        try{

            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection conR =DriverManager.getConnection(conninfo,"dialaa","12345");
            conR .setAutoCommit(false);

            String qury2="SELECT *FROM cinema.movie ";
            System.out.println(qury2);
            Statement  STR=conR.createStatement();
            ResultSet  rsR= STR.executeQuery(qury2);
            DefaultTableModel tblMod2 = (DefaultTableModel) jTable2.getModel();
            tblMod2.setRowCount(0);
            while (rsR.next())
            {
                 tblMod2.addRow(new String []{rsR.getString(2),rsR.getString(1),rsR.getString(5),rsR.getString(3),rsR.getString(4),rsR.getString(7),rsR.getString(8),rsR.getString(9)});
            }

            conR.commit();
            conR.close();
        }
        catch(Exception ex )
        {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }
    }//GEN-LAST:event_refresh_UPDATEActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

        clndr=Calendar.getInstance();
        try
        {

            DriverManager.registerDriver(new  org.postgresql.Driver());
            String conninfo="jdbc:postgresql://localhost:5432/postgres";
            Connection con1 =DriverManager.getConnection(conninfo,"dialaa","12345");
            con1 .setAutoCommit(false);

            String qury2="SELECT * FROM cinema.movie  ";
            ST=con1.createStatement(ResultSet .TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=ST.executeQuery(qury2);
//                 tblMod2.addRow(new String []{rsR.getString(2),rsR.getString(1),rsR.getString(5),rsR.getString(3),rsR.getString(4),rsR.getString(7),rsR.getString(8),rsR.getString(9)});

            if (rs.next())
            {
                String  name=rs.getString(2);
                jTextField1_MovieName_MM_UPDATE.setText(name);

                String  ID=rs.getString(1);
                jTextField2_MovieID_MM_UPDATE.setText(ID);

                Date date=rs.getDate(5);
                clndr.setTime(date);
                jCalendar3.setCalendar(clndr);

                String  descri=rs.getString(3);
                jTextField11_UPDATE.setText(descri);

                String  type=rs.getString(4);
                jTextField8_UPDATE.setText(type);

                String  start_t=rs.getString(7);
                jTextField9_UPDATE.setText(start_t);

                String  end_t=rs.getString(8);
                jTextField10_UPDATE.setText(end_t);

                String  path=rs.getString(9);
                jButton8_UPDATE.setIcon(new ImageIcon(path));

            }

            con1.commit();
            con1.close();
            //    JOptionPane.showMessageDialog(null , "connected");

        }
        catch(Exception ex )
        {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null , " not connected");

        }

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fa_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fa_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fa_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fa_movie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fa_movie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR_INSEART;
    private javax.swing.JButton DELETE_DELET;
    private javax.swing.JButton UPDATE_UPDATE;
    private javax.swing.JButton jButton5_INSEART;
    private javax.swing.JButton jButton6_INSEART;
    private javax.swing.JButton jButton8_UPDATE;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JCalendar jCalendar3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField10_UPDATE;
    private javax.swing.JTextField jTextField11_UPDATE;
    private javax.swing.JTextField jTextField1_INSEART;
    public static javax.swing.JTextField jTextField1_MovieName_MM_UPDATE;
    private javax.swing.JTextField jTextField2_INSEART;
    public static javax.swing.JTextField jTextField2_MovieID_MM_UPDATE;
    private javax.swing.JTextField jTextField4_INSEART;
    private javax.swing.JTextField jTextField5_INSEART;
    private javax.swing.JTextField jTextField6_INSEART;
    private javax.swing.JTextField jTextField7_INSEART;
    private javax.swing.JTextField jTextField8_UPDATE;
    private javax.swing.JTextField jTextField9_UPDATE;
    private javax.swing.JButton refresh_ALL;
    private javax.swing.JButton refresh_DELETE;
    private javax.swing.JButton refresh_UPDATE;
    // End of variables declaration//GEN-END:variables
}
